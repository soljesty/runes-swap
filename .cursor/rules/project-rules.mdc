---
description: 
globs: 
alwaysApply: true
---
We are building a Next.js application called 'RunesSwap.app'. The goal is a Bitcoin Runes swap platform similar to Uniswap, but on Bitcoin and using a strict minimal Windows 98 UI theme. We will use TypeScript, regular CSS for styling, the SatsTerminal SDK for swap logic, and Laser Eyes for wallet connection. We'll also use Zustand for state management and React Query (TanStack Query) for server state/data fetching.

The app should be responsive for mobile and as lightweight as possible.

if the terminal asks us for some input, just wait for me to do it and i will let you know once it's done. just tell me what i need to select.

Always reference the docs if you are working on something that is touching it.
Sats Terminal: All the swapping logic
Laser Eyes: Wallet Connection logic
Ordiscan: Balance, UTXOs, etc.

If we run into an error and we need multiple attempts to fix it, add logs to the console, and let me know what i should search for in the console, so i can give you the error logs and you can fix it. once we have fixed the bug successfully, remove the logs again.

after big changes, run pnpm build to see if you caused anything to break.

if you run npm run dev or pnpm dev, check if there is already a localhost running. if yes, shut it down first so we are always on localhost:3000.